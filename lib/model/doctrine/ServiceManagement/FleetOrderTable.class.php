<?php

/**
 * FleetOrderTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class FleetOrderTable extends PluginFleetOrderTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object FleetOrderTable
     */
	public static function getInstance()
	{
		return Doctrine_Core::getTable('FleetOrder');
	}
	
	public static function processCreate ($task_id, $token_id, $vehicle_id, $departure_date, $departure_time, $fuel_acquired_id, $fuel_amount, $description ) 
	{      
        try{				
				$_nw = new FleetOrder(); 
				$_nw->token_id = $token_id; 
				$_nw->task_id = $task_id; 
				$_nw->vehicle_id = $vehicle_id; 
				$_nw->departure_date = $departure_date; 
				$_nw->departure_time = $departure_time; 
				$_nw->fuel_acquire_type_id = $fuel_acquired_id; 
				$_nw->fuel_amount = $fuel_amount; 
				$_nw->description = $description ;   
				$_nw->save(); 
								
            return true; 
        } catch ( Exception $e) {
            return false; 
        }
	}
	
	 
   public static function processObject($_id, $token_id ) 
	{
		$q= Doctrine_Query::create()
			->select("tsko.*, vh.token_id as vehicleTokenID ")
			->from("AssignmentOrder tsko") 
			->innerJoin("tsko.Task tsk")
			->innerJoin("tsko.Driver dr on tsko.participant_id = dr.id")
			->innerJoin("tsko.Vehicle vh on tsko.vehicle_id = vh.id")   
			->where('tsko.id = ? AND tsko.token_id = ?', array($_id, $token_id))
			->fetchOne ( );
			
		return ( ! $q ? null : $q ); 
	}
	
	public static function processSelection ( $task_id, $token_id, $status=null, $keyword=null, $offset=0, $limit=10) 
	{
		$q= Doctrine_Query::create()
			->select("ftsko.* ")
			->from("FleetOrder ftsko")  
			->innerJoin("ftsko.Task tsk")
			//->innerJoin("ftsko.Participant prt on ftsko.participant_id = prt.id")
			->innerJoin("ftsko.Vehicle vh on ftsko.vehicle_id = vh.id")    
			->offset($offset)
			->limit($limit)
			->where('ftsko.task_id = ? AND ftsko.token_id = ?', array($task_id, $token_id))
			->execute( ); 

		return ( count ( $q ) <= 0 ? null : $q ); 
	}
}
