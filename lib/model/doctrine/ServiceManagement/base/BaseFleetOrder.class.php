<?php

/**
 * BaseFleetOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $vehicle_id
 * @property string $token_id
 * @property integer $task_id
 * @property string $effective_date
 * @property string $departure_date
 * @property string $departure_time
 * @property boolean $departure_status
 * @property string $return_date
 * @property string $return_time
 * @property boolean $return_status
 * @property integer $number_of_passangers
 * @property float $departure_mileage
 * @property float $return_mileage
 * @property float $difference_mileag
 * @property integer $fuel_acquire_type_id
 * @property float $fuel_amount
 * @property clob $description
 * @property Vehicle $Vehicle
 * @property Task $Task
 * 
 * @package    noradVMS
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFleetOrder extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fleet_order');
        $this->hasColumn('vehicle_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('token_id', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('task_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('effective_date', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('departure_date', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('departure_time', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('departure_status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 1,
             ));
        $this->hasColumn('return_date', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('return_time', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('return_status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('number_of_passangers', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('departure_mileage', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('return_mileage', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('difference_mileag', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('fuel_acquire_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('fuel_amount', 'float', null, array(
             'type' => 'float',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Vehicle', array(
             'local' => 'vehicle_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Task', array(
             'local' => 'task_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}