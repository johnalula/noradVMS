<?php

/**
 * BaseUserGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $token_id
 * @property integer $group_type_id
 * @property string $name
 * @property boolean $is_active
 * @property boolean $is_blocked
 * @property boolean $status
 * @property integer $ui_theme_color_setting
 * @property integer $ui_language_setting
 * @property clob $description
 * @property Doctrine_Collection $userGroups
 * @property Doctrine_Collection $groupModulePermissions
 * 
 * @package    noradVMS
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_group');
        $this->hasColumn('token_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('group_type_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('is_blocked', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
        $this->hasColumn('ui_theme_color_setting', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('ui_language_setting', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'clob', null, array(
             'type' => 'clob',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('User as userGroups', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $this->hasMany('Permission as groupModulePermissions', array(
             'local' => 'id',
             'foreign' => 'group_id'));
    }
}