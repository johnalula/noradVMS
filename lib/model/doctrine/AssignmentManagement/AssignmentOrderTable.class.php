<?php

/**
 * AssignmentOrderTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AssignmentOrderTable extends PluginAssignmentOrderTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object AssignmentOrderTable
     */
     
   public static function processCreate ($task_id, $token_id, $vehicle_id, $driver_id, $description, $date)
   {
		//try{
			//if(is_null($task_id) && is_null($token_id) )
				//return false;
				//$driver = DriverTable
				$_nw = new AssignmentOrder ();  
				$_nw->task_id = $task_id;
				$_nw->token_id = $token_id;   
				$_nw->participant_id = $driver_id;   
				$_nw->vehicle_id = $vehicle_id;   
				$_nw->effective_date = $date;  
				$_nw->description = $description; 
				$_nw->save(); 
				$_nw_id = $_nw->id;
				$token = $_nw->token_id;
				
				$order = self::processObject($_nw_id, $token);
				
				$flag = VehicleTable::processVehicleAssignment( $order ); 
			 
					return true;
			
		//} catch ( Exception $e ) {
        //    return false; 
       // }
	}
   
   public static function processObject($_id, $token_id ) 
	{
		$q= Doctrine_Query::create()
			->select("tsko.*, vh.token_id as vehicleTokenID ")
			->from("AssignmentOrder tsko") 
			->innerJoin("tsko.Task tsk")
			->innerJoin("tsko.Driver dr on tsko.participant_id = dr.id")
			->innerJoin("tsko.Vehicle vh on tsko.vehicle_id = vh.id")   
			->where('tsko.id = ? AND tsko.token_id = ?', array($_id, $token_id))
			->fetchOne ( );
			
		return ( ! $q ? null : $q ); 
	}
	
	public static function processSelection ( $task_id, $token_id, $status=null, $keyword=null, $offset=0, $limit=10) 
	{
		$q= Doctrine_Query::create()
			->select("tsko.*,  prt.name as firstName, prt.father_name as fatherName, prt.grand_father_name  as grandFatherName, dr.employee_id as empID, vh.plate_number as plateNo, vh.plate_code as plateCode, vh.plate_code_no as plateCodeNo")
			->from("AssignmentOrder tsko")  
			->innerJoin("tsko.Task tsk")
			->innerJoin("tsko.Driver dr")
			->innerJoin("dr.Participant prt")
			->innerJoin("tsko.Vehicle vh")    
			->offset($offset)
			->limit($limit)
			->where('tsko.task_id = ? AND tsko.token_id = ?', array($task_id, $token_id))
			->execute( ); 

		return ( count ( $q ) <= 0 ? null : $q ); 
	}
	
	public static function getInstance()
	{
		return Doctrine_Core::getTable('AssignmentOrder');
	}
}
