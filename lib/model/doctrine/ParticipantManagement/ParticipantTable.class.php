<?php

/**
 * ParticipantTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ParticipantTable extends PluginParticipantTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object ParticipantTable
     */
     
	
	
	public static function getInstance()
	{
		return Doctrine_Core::getTable('Participant');
	}
	
	public static function processObject($_id, $token_id)
	{
		$q= Doctrine_Query::create()
			->select("prt.* ")
			->from("Participant prt") // 
			->where("prt.id = ? AND prt.token_id = ?",array($_id, $token_id) )
			->fetchOne(); 
		return (! $q ? null : $q ); 	
		
	}
	
	public static function processSelection($status=null, $keyword=null, $exclusion=null , $parent=null, $dept=null, $type=null, $offset=0, $limit=10 ) 
	{
		$q= Doctrine_Query::create()
			->select("prt.*, prt.name as firstName, prt.father_name as fatherName, prt.grand_father_name as grandFatherName, prt.full_name as fullName")
			->from("Participant prt") 
			//->leftJoin("prt.Participant dept on dept.id = prt.dept_id")
			->offset($offset)
			->limit($limit)
			->where("prt.employment_type_id <> ?", ParticipantCore::$DRIVER ); 
		$q= self::addStatusQuery($q, $status );
		$q= self::addKeywordQuery($q, $keyword );
		$q= self::addExclusionQuery($q, $exclusion );
		//$q= self::addUmbrellaQuery($q, $parent );
		if(! is_null($dept))
			$q=$q->andWhere("dept.id=?", $dept);
		$q= $q->execute( ); 

		return ( count ( $q ) <= 0 ? null : $q ); 
	}
	
	public static function processCustomerSelection( $status=null, $keyword=null, $offset=0, $limit=10)
	{
		$q = Doctrine_Query::create()
				->select("prt.*, prt.full_name as fullName")
				->from("Participant prt") 
				->leftJoin("prt.Employee emp")
				//->leftJoin("usr.userModulePermissions usrper on usrper.user_id = usr.id")
				//->leftJoin("grp.groupModulePermissions per on per.group_id = grp.id")
				->offset($offset)
				->limit($limit)
				//->where("prt.employment_type_id <> ?", ParticipantCore::$DRIVER )
				//->where('prt.id  != ?', $customer_id)
				->execute( ); 

		return ( count ( $q ) <= 0 ? null : $q ); 
		
	}
	public static function processParticipantTypeSelection()
	{
		$q = Doctrine_Query::create()
			->select("DISTINCT(prt.participant_type) AS participantType")
			->from("Participant prt") 
			->where("prt.participant_type IS NOT NULL")		
			->execute();
		
		$types = array();
		foreach( $q as $w )
			$types[] = $w->participantType;
	 
		return ( count ( $types ) <= 0 ? null : $types );
		
	}
	
	public static function processParticipantStatusSelection()
	{
		$q = Doctrine_Query::create()
			->select("DISTINCT(prt.status_id) AS partyStatus")
			->from("Participant prt") 
			->where("prt.status_id IS NOT NULL")		
			->execute();
		
		$types = array();
		foreach( $q as $w )
			$types[] = $w->partyStatus;
	 
		return ( count ( $types ) <= 0 ? null : $types );
		
	}
}
