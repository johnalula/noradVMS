<?php

/**
 * BaseParticipant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $token_id
 * @property string $name
 * @property string $alias
 * @property integer $participant_type_id
 * @property integer $status
 * @property integer $parent_id
 * @property integer $leader_participant_id
 * @property integer $participant_contact_id
 * @property string $vat_number
 * @property integer $project_no
 * @property integer $campus_id
 * @property string $description
 * @property string $type
 * @property integer $dept_id
 * @property string $title
 * @property string $first_name
 * @property string $last_name
 * @property integer $gender
 * @property integer $birth_date
 * @property string $job_title
 * @property string $dean_name
 * @property string $director_name
 * @property integer $section_no
 * @property string $section_leader_name
 * @property integer $project_code
 * @property string $project_director
 * @property integer $participant_id
 * @property integer $license_type
 * @property integer $work_experience
 * @property date $established_date
 * @property string $company_owner
 * @property integer $company_license_type
 * @property Participant $Participant
 * @property ParticipantContact $ParticipantContact
 * @property ParticipantType $ParticipantType
 * @property Campus $Campus
 * @property Doctrine_Collection $vehicleDrivers
 * @property Doctrine_Collection $acquisitionTaskTargetParticipants
 * @property Doctrine_Collection $vehicleAssignDriverParticipant
 * @property Doctrine_Collection $transferTaskTransferee
 * @property Doctrine_Collection $vehicleReturnParticipants
 * @property Doctrine_Collection $taskParticipants
 * @property Doctrine_Collection $participantParentParticipants
 * @property Doctrine_Collection $participantEmployeeParticipants
 * @property Doctrine_Collection $Driver
 * 
 * @package    noradVMS
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseParticipant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('participant');
        $this->hasColumn('token_id', 'integer', null, array(
             'type' => 'integer',
             'unique' => true,
             'notnull' => true,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('alias', 'string', 20, array(
             'type' => 'string',
             'length' => 20,
             ));
        $this->hasColumn('participant_type_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('parent_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('leader_participant_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('participant_contact_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('vat_number', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('project_no', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('campus_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('description', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('type', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('dept_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('title', 'string', 40, array(
             'type' => 'string',
             'length' => 40,
             ));
        $this->hasColumn('first_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('last_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('gender', 'integer', null, array(
             'type' => 'integer',
             'default' => 1,
             ));
        $this->hasColumn('birth_date', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('job_title', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));
        $this->hasColumn('dean_name', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             ));
        $this->hasColumn('director_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('section_no', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('section_leader_name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('project_code', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('project_director', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('participant_id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             ));
        $this->hasColumn('license_type', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('work_experience', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('established_date', 'date', null, array(
             'type' => 'date',
             ));
        $this->hasColumn('company_owner', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('company_license_type', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->setSubClasses(array(
             'Employee' => 
             array(
              'type' => 1,
             ),
             'College' => 
             array(
              'type' => 2,
             ),
             'Center' => 
             array(
              'type' => 3,
             ),
             'Institution' => 
             array(
              'type' => 4,
             ),
             'Department' => 
             array(
              'type' => 5,
             ),
             'Section' => 
             array(
              'type' => 6,
             ),
             'Office' => 
             array(
              'type' => 7,
             ),
             'Project' => 
             array(
              'type' => 8,
             ),
             'Driver' => 
             array(
              'type' => 9,
             ),
             'Other' => 
             array(
              'type' => 10,
             ),
             'Company' => 
             array(
              'type' => 11,
             ),
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Participant', array(
             'local' => 'leader_participant_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ParticipantContact', array(
             'local' => 'participant_contact_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ParticipantType', array(
             'local' => 'participant_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Campus', array(
             'local' => 'campus_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('AssignedVehicle as vehicleDrivers', array(
             'local' => 'id',
             'foreign' => 'driver_id'));

        $this->hasMany('FleetServiceTask as acquisitionTaskTargetParticipants', array(
             'local' => 'id',
             'foreign' => 'agreement_participant_id'));

        $this->hasMany('AssignmentTask as vehicleAssignDriverParticipant', array(
             'local' => 'id',
             'foreign' => 'driver_id'));

        $this->hasMany('TransferTask as transferTaskTransferee', array(
             'local' => 'id',
             'foreign' => 'transferee_id'));

        $this->hasMany('ReturnTask as vehicleReturnParticipants', array(
             'local' => 'id',
             'foreign' => 'returnee_id'));

        $this->hasMany('TaskParticipant as taskParticipants', array(
             'local' => 'id',
             'foreign' => 'participant_id'));

        $this->hasMany('Participant as participantParentParticipants', array(
             'local' => 'id',
             'foreign' => 'leader_participant_id'));

        $this->hasMany('Employee as participantEmployeeParticipants', array(
             'local' => 'id',
             'foreign' => 'dept_id'));

        $this->hasMany('Driver', array(
             'local' => 'id',
             'foreign' => 'participant_id'));
    }
}