detect_relations: true

Item:
  package: PropertyManagement
  columns: 
    token_id: { type: string(100)  }
    task_id: { type: integer , notnull: false }
    task_order_id: { type: integer, notnull: true }
    category_id: { type: integer, notnull: false }       
    clss: { type: integer, default: 0 }
    unit_id: { type: integer , default: 1 }
    quantity: { type: float , default: 0 }
    used_quantity: { type: float, default: 0 } 
    current_quantity: { type: float, default: 0 } 
    serial_no: { type: string(255) }
    old_pin: { type: string(255), default: "NA"}
    new_pin: { type: string(255), default: "NA"}
    pin_num: { type: integer} 
    is_present: { type: boolean, default: false }
    effective_date:  { type: integer }
    status: { type: integer, default: 1 }    
    description: { type: string(255) } 
  relations:
   Category: { onDelete: CASCADE, local: category_id, foreign: id, foreignAlias: itemCategorys }
   Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: itemTasks }
   TaskOrder: { onDelete: CASCADE, local: task_order_id, foreign: id, foreignAlias: itemTaskOrders } 
   Unit: { onDelete: CASCADE, local: unit_id, foreign: id, foreignAlias: itemUnits }
    
  
Vehicle:
  package: PropertyManagement 
  inheritance:
    extends: Item
    type: concrete
    keyField: type
    keyValue: 1
  columns: 
    plate_number: { type: string(255) }
    plate_code: { type: string(255), default: 'ET' }
    initial_mileage: { type: integer }
    current_mileage: { type: integer }
    vehicle_type_id: { type: integer } 
    vehicle_make: { type: string(50) }
    litter_per_km: { type: float }
    seatng_capacity: { type: integer } 
    engine_number: { type: string(100) }
    chesis_number: { type: string(100) }
    vehicle_model: { type: string(100) }
    vehicl_color: { type: string(50) }
    vehicle_weight: { type: float }
    service_type_id: { type: integer }
    fuel_type_id: { type: integer }
    purchased_date: { type: date }
    service_year: { type: integer, default: 0 }
    checkup_period_id: { type: integer }
    vehicle_status: { type: integer, default: 0 }
    fuel_setting_id: { type: integer }
    is_assigned: { type: boolean, default: 0 } 
    description: { type: clob }
  relations:
   VehicleType: { onDelete: CASCADE, local: vehicle_type_id, foreign: id, foreignAlias: vehicleTypes }
   VehicleServiceType: { onDelete: CASCADE, local: service_type_id, foreign: id, foreignAlias: vehicleTypes }
   FuelType: { onDelete: CASCADE, local: fuel_type_id, foreign: id, foreignAlias: vehicleTypes }  

Sparepart:
  package: PropertyManagement
  inheritance:
    extends: Item
    type: concrete
    keyField: type
    keyValue: 2
  columns:
    spare_Identification: {type : string(100) } 

VehicleCheckupSetting:
  package: VehicleSetting
  columns:
    vehicle_id: { type: integer }
    check_up_name: { type: string(100) }
    pass_value: { type: boolean, default: true }
    fail_value: { type: boolean, default: false }
    na_value: { type: boolean, default: false }
  relations:
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: vehicleCheckupSettings }

VehicleInsuranceSetting:
  package: VehicleSetting
  columns:
    vehicle_id: { type: integer}
    insurer_name: { type: string(255) }
    insurance_number: { type: string(100) }
    insurance_type: { type: integer }
    insurance_period: { type: integer }
    insurance_expiry_date: { type: string(100) }
    last_insurance_renewal: { type: string(100) }
    insurance_status: { type: boolean, default: false }
  relations:
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: vehicleCheckupSettings }
    
    
AssignedVehicle:
  package: VehicleSetting
  columns:
    task_id: { type: integer }
    driver_id: { type: integer }   
    vehicle_id: { type: integer }   
    assigned_date: { type: datetime }
    maintenance_status: { type: boolean, default: false }
    departure_status: { type: boolean, default: false }
    return_status: { type: boolean, default: false }
    reasigned_status: { type: boolean, default: false }
  relations: 
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: vehicleAssignmentTasks }
    Participant: { onDelete: CASCADE, local: driver_id, foreign: id, foreignAlias: vehicleDrivers } 
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: assignedVehicle }
    
VehicleType:
  package: VehicleSetting
  columns:
    name: { type: string(255) }
    description: { type: clob }
    
VehicleChakupPeriod:
  package: VehicleSetting
  columns:
    vehicle_id: { type: integer }
    service_period: { type: integer }
    period_frequency: { type: integer }
  relations:
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: vehicleCheckupPeriod }
    
VehicleFuelSetting:
  package: VehicleSetting
  columns:
    vehicle_id: { type: integer }
    fuel_ammount: { type: float }
    number_of_days: { type: integer }
    description: { type: clob }
  relations:
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: vehicleCheckupSettings }
    
VehicleServiceType:
  package: VehicleSetting
  columns: 
    name: { type: string(100) }
    description: { type: clob }
    
ServiceType:
  package: ServiceManagement
  columns:
    name: { type: string(255) }
    description: { type: clob }
     
FuelType:
  package: VehicleSetting
  columns:
   name: { type: string(255) }
   description: { type: clob } 
  
  
Category:
  package: CategorySettings
  actAs:
    Timestampable: ~
  columns: 
    name: { type: string(255), notnull: true, unique: false } 
    category_group_id: { type: integer, default: 1 }
    category_class_id: { type: integer, default: 4 }
    description: { type: string(255) } 
 

TaskTransaction:
  package: TaskFrameworks
  columns:
    task_id: { type: integer }     
    token_id: { type: integer }     
    cost_description: { type: clob }
    transaction_date: { type: string(100) }
    cost_credited: { type: float }
    cost_debited: { type: float }
    cost_balance: { type: float }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskCostTransactions }
    
Task:
  package: TaskFrameworks
  columns:  
    token_id: { type: string(100)  }
    start_date: { type: string(50) }
    end_date: { type: string(50) }
    effective_date: { type: string(50) }
    status_id: { type: integer, default: 1 }
    reference_no: { type: integer }
    description: { type: clob }


TaskOrder:
  package: PropertyManagement
  actAs:
    Timestampable: ~
  columns:
    task_id: { type: integer , notnull: true }
    token_id: { type: string(100) , notnull: false }
    category_id: { type: integer, notnull: true }
    clss: { type: integer, default: 1 }
    unit_id: { type: integer, default: 1 }
    actual_quantity: { type: float, notnull: true }
    remaining: { type: float, default: 0.0 }
    unit_price: { type: float }
    vat: { type: boolean, default: 0 }
    currency_id: { type: integer, default: 1 }
    amount: { type: float }
    effective_date:  { type: string(100) }
    status: { type: integer, default: 1 }
    description: { type: string(255) }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskOrderTasks }
    Category: { onDelete: CASCADE, local: category_id, foreign: id, foreignAlias: taskOrderCategories }
    Unit: { onDelete: CASCADE, local: unit_id, foreign: id, foreignAlias: taskOrderUnits }
    Currency: { onDelete: CASCADE, local: currency_id, foreign: id, foreignAlias: taskOrderCurrencies } 
  
FleetServiceTask:
  package: ServiceManagement
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 1
  columns: 
    agreement_participant_id: { type: integer }
    departure_date: { type: datetime }
    departure_time: { type: time } 
    departure_status: { type: integer, default: 1}
    return_date: { type: datetime }
    return_time: { type: time }
    return_status: { type: integer, default: 0 }
    number_of_passangers: { type: integer }
    service_agreement_cost: { type: float }
    service_reason: { type: string(255) }
    departure_mileage: { type: integer }
    return_mileage: { type: integer }
    difference_mileag: { type: integer }
    service_type_id: { type: integer }
    duel_acquire_id: { type: integer }
    service_reason: { type: string(255) }
    destination: { type: string(255) }
    service_number_of_days: { type: integer }
    service_delay_status: { type: boolean, default: false }
    number_of_delay_days: { type: integer, default: 0 }
    delay_reason: { type: clob }
  relations:
    ServiceType: { onDelete: CASCADE, local: service_type_id, foreign: id, foreignAlias: serviceTypeServices } 
    Participant: { onDelete: CASCADE, local: agreement_participant_id, foreign: id, foreignAlias: acquisitionTaskTargetParticipants }

ServiceVehicleCost:
  package: ServiceManagement
  columns:
    task_id: { type: integer }
    vehicle_id: { type: integer }
    reference_no: { type: integer }
    unit_price: { type: integer }
    total_price: { type: integer }
    quantity: { type: integer }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: serviceVehicleCostTasks }
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: serviceVehicleCosts }
    
ServiceVehicleItemAcquired:
  package: ServiceManagement
  columns:
    task_id: { type: integer }
    vehicle_id: { type: integer }
    item_id: { type: integer }
    item_name: { type: integer }
    serial_no: { type: integer }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: serviceVehicleAttachmentTasks }
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: serviceVehicleItemAcquiredAttachments }
    
ServiceVehicleAttachment:
  package: ServiceManagement
  columns:
    task_id: { type: integer }
    vehicle_id: { type: integer }
    reference_no: { type: integer }
    item_name: { type: integer }
    serial_no: { type: integer }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: serviceVehicleAttachmentTasks }
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: serviceVehicleAttachmentVehicles }
    
ServiceVehicleAccident:
  package: ServiceManagement
  columns:
    task_id: { type: integer }
    vehicle_id: { type: integer }
    accident_type_id: { type: integer }
    accident_place: { type: string(100) }
    accident_date: { type: datetime }
    accident_time: { type: string(50) }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: serviceVehicleAccidentTasks }
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: serviceVehicleAccidentVehicles }
    
ServiceAccident:
  package: ServiceManagement
  columns:
    task_id: { type: integer }
    accident_date: { type: datetime }
    accident_type: { type: integer }
    descriptioin: { type: clob }
    
    
MaintenanceTask:
  package: MaintenanceMangement
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 2 
    
RegistrationTask:
  package: RegistrationManagement
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 3  
  columns:
    registration_mode: { type: integer }
    
    
FuelingTask:
  package: FuelingMangement
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 4  
    
AccidentTask:
  package: AccidentMangement
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 5 

AssignmentTask:
  package: AssignmentManagement  
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 6  
  columns:
    driver_id: { type: integer }
  relations:
    Participant: { onDelete: CASCADE, local: driver_id, foreign: id, foreignAlias: vehicleAssignDriverParticipant }  


TransferTask:
  package: TransferManagement   
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 7 
  columns:
    transferer_id: {type: integer, notnull: false}
    transferee_id: {type: integer, notnull: false}
  relations:
    Participant: { onDelete: CASCADE, local: transferer_id, foreign: id, foreignAlias: transferTaskTransferer }
    Participant: { onDelete: CASCADE, local: transferee_id, foreign: id, foreignAlias: transferTaskTransferee }


ReplacementTask:
  package: ReplacementManagement  
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 8  
  columns:
    new_vehicle_id: { type: integer }
  relations:
    Vehicle: { onDelete: CASCADE, local: new_vehicle_id, foreign: id, foreignAlias: vehicleReplacementVehicle }

ReturnTask:
  package: ReturnManagement  
  inheritance:
    extends: Task
    type: concrete
    keyField: type
    keyValue: 9  
  columns:
    returnee_id: { type: integer }
  relations:
    Participant: { onDelete: CASCADE, local: returnee_id, foreign: id, foreignAlias: vehicleReturnParticipants }


TaskParticipant:
  package: TaskFrameworks
  columns:
    token_id: { type: string(100) }
    task_id: { type: integer } 
    participant_role: { type: integer }
    participant_id: { type: integer }
    description: { type: clob }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskParticipantsTasks }   
    Participant: { onDelete: CASCADE, local: participant_id, foreign: id, foreignAlias: taskParticipants } 
    
TaskAttachment:
  package: TaskFrameworks
  columns:
    token_id: { type: string(100) }
    task_id: { type: integer, notnull: true } 
    certificate_type: { type: integer, notnull: false }
    reference_number: { type: string (100) }
    num_pages: { type: integer, default: 1 }
    folder_stored: { type: string(255) }
    description: { type: string(255) }    
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskAttachmentTasks }   
  
ItemAcquiredAttachment:
  package: TaskFrameworks
  columns:
   task_id: { type: integer }
   item_id: { type: integer }
   item_name: { type: string(255) }
   attachment_purpose: { type: string(255) }
   description: { type: clob } 
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskAttachmentTasks }   
    Item: { onDelete: CASCADE, local: item_id, foreign: id, foreignAlias: taskAttachmentItems }  
  
TaskExpenseRequired:
  package: TransactionManagement
  columns: 
    task_id: { type: integer }
    expense_type_id: { type: integer }
    expense_date: { type: string(100) }
    reference_no: { type: integer }
    unit_id: { type: integer }
    currency_id: { type: integer }
    quantity: { type: float }
    unit_price: { type: float }
    total_price: { type: float }
    total_price: { type: float }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskAttachmentTask }   
    Unit: { onDelete: CASCADE, local: unit_id, foreign: id, foreignAlias: taskExpenseUnit } 
    Currency: { onDelete: CASCADE, local: currency_id, foreign: id, foreignAlias: taskExpenseCurrency } 
   
TaskAccident:
  package: TaskAccidentManagement
  columns:
    task_id: { type: integer }
    vehicle_id: { type: integer }
    accident_type_id: { type: integer }
    accident_location: { type: string(100) }
    accident_date: { type: string(100) }
    accident_time: { type: timestamp }
    expense_required: { type: float }
    description: { type: string(100) }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskAccidents } 
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: taskAccidentVehicle } 
    
TaskIncident:
  package: TaskAccidentManagement
  columns:
    task_id: { type: integer }
    vehicle_id: { type: integer }
    incident_type_id: { type: integer }
    incident_location: { type: string(100) }
    incident_date: { type: string(100) }
    incident_time: { type: timestamp }
    expense_required: { type: float }
    description: { type: string(100) }
  relations:
    Task: { onDelete: CASCADE, local: task_id, foreign: id, foreignAlias: taskIncident } 
    Vehicle: { onDelete: CASCADE, local: vehicle_id, foreign: id, foreignAlias: taskIncidentVehicle } 
    
  
#*** General Settings 

   
TimeMetric:
  package: GeneralSettings
  columns:
    name: { type: string(255), notnull: true }
    description: { type: string(255) }
   
TimeMetricConversion:
  package: GeneralSettings
  columns:
    from_timemetric_id: {  type: integer, notnull: true }
    to_timemetric_id: {  type: integer, notnull: true }
    rate: { type: float, default: 1.0 }
  relations:
    TimeMetric: { onDelete: CASCADE, local: from_timemetric_id, foreign: id, foreignType: many, foreignAlias: fromtimemetrics }
    TimeMetric: { onDelete: CASCADE, local: to_timemetric_id, foreign: id, foreignAlias: totimemetrics }

Currency:
  package: GeneralSettings
  columns:
    name: { type: string(255), notnull: true }
    alias: { type: string(40), notnull: false }
    description: { type: clob }
    is_default: { type: boolean, default: false }

CurrencyExchange:
  package: GeneralSettings
  actAs:
    Timestampable: ~
  columns:
    from_currency_id: {  type: integer }
    to_currency_id: {  type: integer }
    rate: { type: float }
  relations:
    Currency: { onDelete: CASCADE, local: from_currency_id, foreignType: many, foreign: id, foreignAlias: fromcurrencies }
    Currency: { onDelete: CASCADE, local: to_currency_id, foreign: id, foreignAlias: tocurrencies }

Metric:
  package: GeneralSettings
  columns:
    name: { type: string(255), notnull:true }
    description: { type: string(255) }

Unit:
  package: GeneralSettings
  columns: 
    name: { type: string(255), notnull: true }
    alias: { type: string(40), notnull: false }   
    description: { type: string(255), notnull: true } 

UnitConversion:
  package: GeneralSettings
  columns:
    from_unit_id: {  type: integer }
    to_unit_id: {  type: integer }
    rate: { type: double, default: 1.0 }
  relations:
    Unit: { onDelete: CASCADE, local: to_unit_id, foreign: id, foreignAlias: units }
    Unit: { onDelete: CASCADE, local: from_unit_id, foreign: id, foreignAlias: units }
    
 #*******  Participant Management 
 
Participant:
  package: ParticipantManagement
  columns:
   token_id: { type: integer, unique: true, notnull: true }
   name:  { type: string(255), notnull: true }
   alias: { type: string(20) } 
   participant_type_id:  { type: integer }
   status_id: { type: integer , default: 1 } 
   parent_id: { type: integer } 
   leader_participant_id: { type: integer }
   vat_number:  { type: string(255) }
   project_no: { type: integer }
   campus_id: { type: integer }
   description:  { type: string(255) }  
  relations:
    Participant: { onDelete: CASCADE, local: parent_id, foreign: id, foreignAlias: participantParentParticipants } 
    Participant: { onDelete: CASCADE, local: leader_participant_id, foreign: id, foreignAlias: participantParentParticipants }  
    Campus: { onDelete: CASCADE, local: campus_id, foreign: id, foreignAlias: participantCampusParticipants }  
   
ParticipantType:
  package: ParticipantManagement
  columns:
    name: { type: string(255) }
    description: { type: clob }
    
ParticipantContact:
  package: ParticipantManagement
  columns:
    participant_id: { type: integer }
    street_number:  { type: string(255)}
    house_number:  { type: string(255)}
    pobox:  { type: string(255)}
    mobile_number:  { type: string(255)}
    phone_number:  { type: string(255)}
    fax:  { type: string(255)}
    email:  { type: string(255)}
    website:  { type: string(255)}
  relations:
    Participant: { onDelete: CASCADE, local: participant_id, foreign: id, foreignAlias: participantContacts }
  
Employee:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 1
  columns: 
    title:  { type: string(40) }
    father_name:  { type: string(100) }
    grand_father_name: { type: string(100) }
    full_name: { type: string(255) }
    gender: { type: integer, default: 1 }
    birth_date:  { type: datetime }
    birth_place:  { type: string(100) } 
    id_no: { type: string(100) }
    job_title: { type: string( 50) }
    employment_type_id: { type: integer }
  
College:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 2
  columns:
   dean_name: { type: string(255) } 
    
Center:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 3
  columns:
   director_name: { type: string(255) }
  
Institution:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 4
  columns:
   director_name: { type: string(255) }
  
Department:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 5
  columns:
   head_name: { type: string(100) }
  
Section:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 6 
  columns:
    section_no: { type: integer }
    section_leader_name: { type: string(255) }
  
Office:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 7
  columns: 
    director_name: { type: string(255) }
  
Project:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 8
  columns:
   project_code: { type: integer }
   project_director: { type: string(255) }  
  
Other:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 9 
  
Company:
  package: ParticipantManagement
  inheritance:
    extends: Participant
    type: concrete
    keyField: type
    keyValue: 10
  columns:
    established_date: { type: date }
    company_owner: { type: string(255) }
    company_license_type: { type: integer }

Driver:
  package: ParticipantManagement
  columns: 
    token_id: { type: string(255) }
    employee_id: { type: integer }
    license_type: { type: integer }
    work_experience: { type: integer }
    desctiption: { type: clob }
  relations:
    Participant: { onDelete: CASCADE, local: employee_id, foreign: id, foreignAlias: participantDrivers }
    
Campus:
  package: ParticipantManagement
  columns:
    name: { type: string(255) }
    description: { type: clob } 
  
User:
  package: UserManagement
  columns:
    participant_id: { type: integer }
    username: { type: string(255), notnull: true }
    password: { type: string(255), notnull: true }
    token_id: { type: string(255), notnull: true }
    group_id: { type: integer } 
    is_active: { type: boolean, default: 0 }
    is_blocked: { type: boolean, default: 0 }
    status: { type: boolean, default: 0 }
    permission_mode: { type: integer }
    ui_theme_color_setting: { type: integer }
    ui_language_setting: { type: integer }
  relations:
    UserGroup: { onDelete: CASCADE, local: group_id, foreign: id, foreignAlias: userGroups } 
    Participant: { onDelete: CASCADE, local: participant_id, foreign: id, foreignAlias: participantUser }
  
UserGroup:
  package: UserManagement
  columns:
   token_id: { type: string(255), notnull: true } 
   name: { type: string(100) }
   description: { type: clob }
   

Permission:
  package: UserManagement
  columns:
    token_id: { type: string(100) }
    group_id: { type: integer }
    user_id: { type: integer }
    module_id: { type: integer }
    create_action: { type: boolean, default: 0 }
    delete_action: { type: boolean, default: 0 }
    edit_action: { type: boolean, default: 0 }
    view_action: { type: boolean, default: 0 }
  relations:
    UserGroup: { onDelete: CASCADE, local: group_id, foreign: id, foreignAlias: groupModulePermissions }
    User: { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: userModulePermissions } 

ModulePermissionSetting:
  package: UserManagement
  columns:
    module_name: { type: string(255) }
    description: { type: clob }

SystemLogFile:
  package: UserManagement
  columns:
    user_id: { type: integer }
    token_id: { type: string(255) }
    action_date: { type: string(100)}
    action_time: { type: string(50) }
    module_name: { type: string(100) }
    deleted_date: { type: string(100)}
    created_date: { type: string(100)}
    viewed_date: { type: string(100)}
    edited_date: { type: string(100)}
    action_type_id: { type: integer }
    pc_ip_address: { type: string(100) }
  relations:
    User: { onDelete: CASCADE, local: user_id, foreign: id, foreignAlias: userSystemLogFileActivities }
    
